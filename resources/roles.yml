Resources:
  ApiHandler:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "Lambda-ApiHandler"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "Lambda-AppSyncServiceRole-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:invokeFunction"
                Resource:
                  - "arn:aws:lambda:${self:provider.region}:*:function:papertesla-api-production-create"
                  - "arn:aws:lambda:${self:provider.region}:*:function:papertesla-api-production-create:*"

        - PolicyName: "LambdaRole-DynamoDB-Policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:BatchGetItem"
                Resource:
                  # Pricing Table Resources
                  - ${cf:${self:custom.stack}.PricingTableArn}
                  - ${cf:${self:custom.stack}.PricingTableArn}/*
                  # Orders Table Resources
                  - ${cf:${self:custom.stack}.OrdersTableArn}
                  - ${cf:${self:custom.stack}.OrdersTableArn}/*
